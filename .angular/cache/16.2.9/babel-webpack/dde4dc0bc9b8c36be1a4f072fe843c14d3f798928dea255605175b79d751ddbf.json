{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport { unsubscribeIfValid } from '../../../shared/services/subscriptions.helper';\nimport Swal from 'sweetalert2';\nimport { SwalFire, SwalFireNoButtons } from 'src/app/shared/services/swal.wrapper';\nimport { ColumnType } from 'src/app/shared/models/components/custom-data-table/columns.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../shared/services/clients.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/datepicker\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"../../../shared/components/buttons/user-icon-button/user-icon-button.component\";\nimport * as i10 from \"../../../shared/components/custom-data-table-server-paged/custom-data-table-server-paged.component\";\nfunction HomeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_4_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onEditAbort());\n    });\n    i0.ɵɵtext(1, \"ABORT EDIT\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_mat_option_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countr_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", countr_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", countr_r8.code, \" - \", countr_r8.name, \" \");\n  }\n}\nfunction HomeComponent_mat_option_134_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const countr_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", countr_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", countr_r9.code, \" - \", countr_r9.name, \" \");\n  }\n}\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(fb, clientService) {\n      this.fb = fb;\n      this.clientService = clientService;\n      this.columns = [{\n        prop: 'name',\n        header: 'name',\n        type: ColumnType.Default\n      }, {\n        prop: 'surname',\n        header: 'surname',\n        type: ColumnType.Default\n      }, {\n        prop: 'gender',\n        header: 'gender',\n        type: ColumnType.ActionsCustom,\n        customCellAction: client => client.gender == 0 ? 'Male' : client.gender == 1 ? 'Female' : client.gender == 2 ? 'Ambiguous' : '-'\n      }, {\n        prop: 'dateOfBirth',\n        header: 'dateOfBirth',\n        type: ColumnType.Date\n      }, {\n        prop: 'address',\n        header: 'address',\n        type: ColumnType.Default\n      }, {\n        prop: 'countryId',\n        header: 'country',\n        type: ColumnType.ActionsCustom,\n        customCellAction: client => this.getCountryFromClient(client)\n      }, {\n        prop: 'postalCode',\n        header: 'postalCode',\n        type: ColumnType.Default\n      }, {\n        prop: 'actions',\n        header: '',\n        type: ColumnType.Actions,\n        editCellAction: client => this.onClientEdit(client),\n        removeCellAction: client => this.onClientRemove(client.id)\n      }];\n      this.crudOperation = \"Create\";\n      this.isCreateOrEditFormLoading = false;\n      this.isSearchingFormLoading = false;\n      this.crudOperationAndHandler = {\n        \"Create\": dto => {\n          this.isCreateOrEditFormLoading = true;\n          unsubscribeIfValid(this.createSubscription);\n          this.createSubscription = this.clientService.createClient(dto).subscribe(result => {\n            this.isCreateOrEditFormLoading = false;\n            if (result.wasOk) {\n              this.refreshFilterFormOrSetFromClient();\n              SwalFire('User created', `User ${dto.name} ${dto.surname} was successfully created`, 'success');\n            } else {\n              SwalFire('User was not created', `User ${dto.name} ${dto.surname} was not successfully created, try to shorten your fields or check date-of-birth and country mandatory fields, and/or talk to adminstrator`, 'error');\n            }\n          }, error => {\n            this.isCreateOrEditFormLoading = false;\n            SwalFire('User was not created', `There was a communication and/or server error: ${error}`, 'error');\n          });\n        },\n        \"Edit\": dto => {\n          this.isCreateOrEditFormLoading = true;\n          unsubscribeIfValid(this.editSubscription);\n          this.editSubscription = this.clientService.editClient(dto).subscribe(result => {\n            this.isCreateOrEditFormLoading = false;\n            if (result.wasOk) {\n              this.refreshFilterFormOrSetFromClient();\n              this.refreshDataTable([...this.clients.filter(client => client.id != dto.id), dto]);\n              this.crudOperation = 'Create';\n              SwalFire('User edit', `User ${dto.name} ${dto.surname} was successfully edited`, 'success');\n            } else {\n              SwalFire('User was not edited', `User ${dto.name} ${dto.surname} was not successfully edited, try to shorten your fields and/or talk to adminstrator`, 'error');\n            }\n          }, error => {\n            this.isCreateOrEditFormLoading = false;\n            SwalFire('User was not created', `There was a communication and/or server error: ${error}`, 'error');\n          });\n        },\n        \"Remove\": id => {\n          unsubscribeIfValid(this.removeSubscription);\n          this.removeSubscription = this.clientService.removeClient(id).subscribe(result => {\n            if (result.wasOk) {\n              this.refreshDataTable(this.clients.filter(client => client.id != id));\n              SwalFire('User was removed', `User with id: ${id} was successfully removed`, 'success');\n            } else {\n              SwalFire('User was not removed', `User with id: ${id} was not successfully removed`, 'error');\n            }\n          }, error => {\n            SwalFire('Clients couldn\\'t be fetched', `There was a communication and/or server error: ${error}`, 'error');\n          });\n        },\n        \"Search\": (dto, paged = false) => {\n          this.isSearchingFormLoading = true;\n          unsubscribeIfValid(this.getClientsSubscription);\n          this.refreshDataTable([]);\n          this.getClientsSubscription = this.clientService.getClients(dto).subscribe(result => {\n            this.isSearchingFormLoading = false;\n            this.refreshDataTable(paged ? [...this.clients, ...result?.data] : result?.data);\n            this.totalClients = result?.count;\n            if (result?.data?.length) {\n              SwalFireNoButtons('Clients fetched', `Clients successfully fetched`, 'success', 1618.0339887);\n            } else {\n              SwalFireNoButtons('No clients fetched', `No clients arrived from request`, 'warning', 2000);\n            }\n          }, error => {\n            this.isSearchingFormLoading = false;\n            SwalFireNoButtons('Clients couldn\\'t be fetched', `There was a communication and/or server error: ${error}`, 'error', 2000);\n          });\n        }\n      };\n      this.countries = [];\n      this.searchCountries = [];\n      this.clients = [];\n      this.getCountriesSubscription = new Subscription();\n      this.getClientsSubscription = new Subscription();\n      this.createSubscription = new Subscription();\n      this.editSubscription = new Subscription();\n      this.removeSubscription = new Subscription();\n      this.defaultClientDTO = {\n        'id': 'fakeId',\n        'name': \"\",\n        'surname': \"\",\n        'gender': 1000,\n        'dateOfBirth': null,\n        'address': \"\",\n        'countryId': '',\n        'postalCode': \"\"\n      };\n      this.defaultClientFilterDTO = {\n        ...this.defaultClientDTO,\n        \"from\": null,\n        \"to\": null,\n        \"skip\": 0,\n        \"take\": 10\n      };\n      this.filterFormKeys = 'id.name.surname.gender.dateOfBirth.address.countryId.postalCode'.split('.');\n      this.totalClients = 0;\n      this.filterForm = this.fb.group(this.defaultClientDTO);\n      this.searchFilterForm = this.fb.group(this.defaultClientFilterDTO);\n    }\n    getCountryFromClient(client) {\n      return this.countries.filter(ct => ct.id == client.countryId).map(ct => ct.code + ' - ' + ct.name)[0];\n    }\n    ngOnDestroy() {\n      unsubscribeIfValid(this.getCountriesSubscription);\n      unsubscribeIfValid(this.createSubscription);\n      unsubscribeIfValid(this.editSubscription);\n      unsubscribeIfValid(this.removeSubscription);\n      unsubscribeIfValid(this.getClientsSubscription);\n    }\n    onSubmit() {\n      this.crudOperationAndHandler[this.crudOperation](this.filterForm.value);\n    }\n    onClientSearch() {\n      this.crudOperationAndHandler['Search'](this.searchFilterForm.value);\n    }\n    onClientEdit(client) {\n      this.crudOperation = \"Edit\";\n      this.refreshFilterFormOrSetFromClient(client);\n    }\n    onClientRemove(id) {\n      Swal.fire({\n        title: 'Are you sure want to remove?',\n        text: 'This user will be permanently removed from database!',\n        icon: 'warning',\n        showCancelButton: true,\n        heightAuto: false,\n        confirmButtonText: 'Yes, remove it!',\n        cancelButtonText: 'No, keep it'\n      }).then(result => {\n        if (result.value) {\n          this.crudOperationAndHandler['Remove'](id);\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          SwalFire('Cancelled', 'User was not removed from database', 'success');\n        }\n      });\n    }\n    onClientPagedSearch(event) {\n      this.totalClients = 0;\n      this.searchFilterForm.value.skip = event.skip;\n      this.searchFilterForm.value.take = event.take;\n      this.crudOperationAndHandler['Search'](this.searchFilterForm.value, true);\n    }\n    onEditAbort() {\n      this.crudOperation = 'Create';\n      this.refreshFilterFormOrSetFromClient();\n    }\n    ngOnInit() {\n      this.tryGetCountries();\n    }\n    tryGetCountries() {\n      unsubscribeIfValid(this.getCountriesSubscription);\n      this.getCountriesSubscription = this.clientService.getCountries().subscribe(countries => {\n        if (countries === undefined || !countries.length) {\n          SwalFireNoButtons('Initial error', 'Could not get countries from database, retrying in 15 seconds', 'error', 2000);\n          setTimeout(() => this.tryGetCountries(), 15000);\n          return;\n        }\n        this.countries = countries.sort((x, y) => x.code.charCodeAt(0) * 1000 + x.code.charCodeAt(1) - y.code.charCodeAt(0) * 1000 + y.code.charCodeAt(1));\n        this.searchCountries = [{\n          id: '',\n          name: 'None',\n          code: '**'\n        }, ...this.countries];\n      }, error => {\n        SwalFireNoButtons('Initial error', `Could not get countries from database \\n Error from server: ${error}`, 'error', 2000);\n      });\n    }\n    refreshDataTable(clients) {\n      this.clients = clients;\n    }\n    refreshFilterFormOrSetFromClient(client) {\n      this.filterFormKeys.map(str => {\n        this.filterForm.get(str)?.setValue(client ? client[str] : this.defaultClientDTO[str]);\n      });\n    }\n    static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n      return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClientService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HomeComponent,\n      selectors: [[\"app-home\"]],\n      decls: 148,\n      vars: 19,\n      consts: [[\"id\", \"home-master\"], [1, \"top-body\"], [1, \"crud-selector\"], [\"class\", \"remove\", 3, \"click\", 4, \"ngIf\"], [3, \"formGroup\"], [\"type\", \"hidden\", \"formControlName\", \"id\"], [1, \"field-wrapper\"], [\"appearance\", \"outline\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"autocomplete\", \"off\"], [\"matInput\", \"\", \"formControlName\", \"surname\", \"autocomplete\", \"off\"], [\"formControlName\", \"gender\", 1, \"gender-select\"], [\"value\", \"0\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"matInput\", \"\", \"formControlName\", \"dateOfBirth\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"matInput\", \"\", \"formControlName\", \"address\", \"autocomplete\", \"off\"], [\"formControlName\", \"countryId\", 1, \"country-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"formControlName\", \"postalCode\", \"autocomplete\", \"off\"], [3, \"title\", \"isLoading\", \"click\"], [1, \"bottom-body\", \"mat-app-background\"], [1, \"top-body\", \"search-panel\"], [\"type\", \"hidden\", \"formControlName\", \"dateOfBirth\"], [\"matInput\", \"\", \"formControlName\", \"from\", 3, \"matDatepicker\"], [\"pickerFrom\", \"\"], [\"matInput\", \"\", \"formControlName\", \"to\", 3, \"matDatepicker\"], [\"pickerTo\", \"\"], [1, \"field-wrapper\", 2, \"width\", \"fit-content\"], [3, \"columns\", \"data\", \"length\", \"pageChanged\"], [1, \"remove\", 3, \"click\"], [3, \"value\"]],\n      template: function HomeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"section\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵtemplate(4, HomeComponent_div_4_Template, 2, 0, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵelement(6, \"input\", 5);\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"mat-form-field\", 7)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementStart(12, \"mat-hint\");\n          i0.ɵɵtext(13, \"(Hint)Paul\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 6)(15, \"mat-form-field\", 7)(16, \"mat-label\");\n          i0.ɵɵtext(17, \"Surname\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 9);\n          i0.ɵɵelementStart(19, \"mat-hint\");\n          i0.ɵɵtext(20, \"(Hint)Milestones\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(21, \"div\", 6)(22, \"mat-form-field\", 7)(23, \"mat-label\");\n          i0.ɵɵtext(24, \"Gender\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"mat-select\", 10)(26, \"mat-option\", 11);\n          i0.ɵɵtext(27, \"Male\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"mat-option\", 12);\n          i0.ɵɵtext(29, \"Female\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"mat-option\", 13);\n          i0.ɵɵtext(31, \"Ambiguous\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(32, \"mat-hint\");\n          i0.ɵɵtext(33, \"(Hint)Female\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(34, \"div\", 6)(35, \"mat-form-field\", 7)(36, \"mat-label\");\n          i0.ɵɵtext(37, \"Date of birth\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(38, \"input\", 14)(39, \"mat-datepicker-toggle\", 15)(40, \"mat-datepicker\", null, 16);\n          i0.ɵɵelementStart(42, \"mat-hint\");\n          i0.ɵɵtext(43, \"(Hint)2000-01-11\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(44, \"div\", 6)(45, \"mat-form-field\", 7)(46, \"mat-label\");\n          i0.ɵɵtext(47, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(48, \"input\", 17);\n          i0.ɵɵelementStart(49, \"mat-hint\");\n          i0.ɵɵtext(50, \"(Hint)Morris Ave\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(51, \"div\", 6)(52, \"mat-form-field\", 7)(53, \"mat-label\");\n          i0.ɵɵtext(54, \"Country\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(55, \"mat-select\", 18);\n          i0.ɵɵtemplate(56, HomeComponent_mat_option_56_Template, 2, 3, \"mat-option\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"mat-hint\");\n          i0.ɵɵtext(58, \"(Hint)Spain\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(59, \"div\", 6)(60, \"mat-form-field\", 7)(61, \"mat-label\");\n          i0.ɵɵtext(62, \"Postal code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(63, \"input\", 20);\n          i0.ɵɵelementStart(64, \"mat-hint\");\n          i0.ɵɵtext(65, \"(Hint)30700\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(66, \"div\", 6)(67, \"app-user-icon-button\", 21);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_app_user_icon_button_click_67_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(68, \"section\", 22)(69, \"section\", 23)(70, \"div\", 2);\n          i0.ɵɵtext(71, \"Search\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(72, \"form\", 4);\n          i0.ɵɵelement(73, \"input\", 5)(74, \"input\", 24);\n          i0.ɵɵelementStart(75, \"div\", 6)(76, \"mat-form-field\", 7)(77, \"mat-label\");\n          i0.ɵɵtext(78, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(79, \"input\", 8);\n          i0.ɵɵelementStart(80, \"mat-hint\");\n          i0.ɵɵtext(81, \"(Hint)Paul\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(82, \"div\", 6)(83, \"mat-form-field\", 7)(84, \"mat-label\");\n          i0.ɵɵtext(85, \"Surname\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(86, \"input\", 9);\n          i0.ɵɵelementStart(87, \"mat-hint\");\n          i0.ɵɵtext(88, \"(Hint)Milestones\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(89, \"div\", 6)(90, \"mat-form-field\", 7)(91, \"mat-label\");\n          i0.ɵɵtext(92, \"Gender\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(93, \"mat-select\", 10)(94, \"mat-option\", 11);\n          i0.ɵɵtext(95, \"Male\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(96, \"mat-option\", 12);\n          i0.ɵɵtext(97, \"Female\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(98, \"mat-option\", 13);\n          i0.ɵɵtext(99, \"Ambiguous\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(100, \"mat-hint\");\n          i0.ɵɵtext(101, \"(Hint)Female\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(102, \"div\", 6)(103, \"mat-form-field\", 7)(104, \"mat-label\");\n          i0.ɵɵtext(105, \"Date of birth (From)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(106, \"input\", 25)(107, \"mat-datepicker-toggle\", 15)(108, \"mat-datepicker\", null, 26);\n          i0.ɵɵelementStart(110, \"mat-hint\");\n          i0.ɵɵtext(111, \"(Hint)2000-01-11\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(112, \"div\", 6)(113, \"mat-form-field\", 7)(114, \"mat-label\");\n          i0.ɵɵtext(115, \"Date of birth (To)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(116, \"input\", 27)(117, \"mat-datepicker-toggle\", 15)(118, \"mat-datepicker\", null, 28);\n          i0.ɵɵelementStart(120, \"mat-hint\");\n          i0.ɵɵtext(121, \"(Hint)2021-06-06\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(122, \"div\", 6)(123, \"mat-form-field\", 7)(124, \"mat-label\");\n          i0.ɵɵtext(125, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(126, \"input\", 17);\n          i0.ɵɵelementStart(127, \"mat-hint\");\n          i0.ɵɵtext(128, \"(Hint)Morris Ave\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(129, \"div\", 6)(130, \"mat-form-field\", 7)(131, \"mat-label\");\n          i0.ɵɵtext(132, \"Country\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(133, \"mat-select\", 18);\n          i0.ɵɵtemplate(134, HomeComponent_mat_option_134_Template, 2, 3, \"mat-option\", 19);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(135, \"mat-hint\");\n          i0.ɵɵtext(136, \"(Hint)Spain\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(137, \"div\", 6)(138, \"mat-form-field\", 7)(139, \"mat-label\");\n          i0.ɵɵtext(140, \"Postal code\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(141, \"input\", 20);\n          i0.ɵɵelementStart(142, \"mat-hint\");\n          i0.ɵɵtext(143, \"(Hint)30700\");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(144, \"div\", 29)(145, \"app-user-icon-button\", 21);\n          i0.ɵɵlistener(\"click\", function HomeComponent_Template_app_user_icon_button_click_145_listener() {\n            return ctx.onClientSearch();\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(146, \"section\")(147, \"app-custom-data-table-server-paged\", 30);\n          i0.ɵɵlistener(\"pageChanged\", function HomeComponent_Template_app_custom_data_table_server_paged_pageChanged_147_listener($event) {\n            return ctx.onClientPagedSearch($event);\n          });\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          const _r1 = i0.ɵɵreference(41);\n          const _r3 = i0.ɵɵreference(109);\n          const _r4 = i0.ɵɵreference(119);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"\", ctx.crudOperation, \" \");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.crudOperation == \"Edit\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.filterForm);\n          i0.ɵɵadvance(33);\n          i0.ɵɵproperty(\"matDatepicker\", _r1);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"for\", _r1);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.countries);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"title\", ctx.crudOperation)(\"isLoading\", ctx.isCreateOrEditFormLoading);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.searchFilterForm);\n          i0.ɵɵadvance(34);\n          i0.ɵɵproperty(\"matDatepicker\", _r3);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"for\", _r3);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"matDatepicker\", _r4);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"for\", _r4);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"ngForOf\", ctx.searchCountries);\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"title\", \"Search\")(\"isLoading\", ctx.isSearchingFormLoading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"columns\", ctx.columns)(\"data\", ctx.clients)(\"length\", ctx.totalClients);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.MatOption, i5.MatDatepicker, i5.MatDatepickerInput, i5.MatDatepickerToggle, i6.MatInput, i7.MatFormField, i7.MatLabel, i7.MatHint, i7.MatSuffix, i8.MatSelect, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i9.UserIconButtonComponent, i10.CustomDataTableServerPagedComponent],\n      styles: [\"[_ngcontent-%COMP%]:root{--backgroundDatePicker: white;--colorDatePicker: black}.crud-selector[_ngcontent-%COMP%]{font-size:20px!important}.crud-selector[_ngcontent-%COMP%]   .remove[_ngcontent-%COMP%]{width:-moz-fit-content;width:fit-content;padding:.3em;display:inline;font-weight:700!important;margin-left:1.5em;cursor:pointer}[_nghost-%COMP%]{height:-webkit-fill-available!important}#home-master[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;height:100%}.top-body[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;height:-moz-fit-content;height:fit-content;padding:3rem;opacity:.8}.top-body[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;width:100%;height:100%}.top-body[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .field-wrapper[_ngcontent-%COMP%]{margin:.5rem}.bottom-body[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;height:-webkit-fill-available!important;padding:3rem;justify-content:flex-end}.bottom-body[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%}.bottom-body[_ngcontent-%COMP%]   section[_ngcontent-%COMP%]   .field-wrapper[_ngcontent-%COMP%]{margin:.5rem}div.mat-paginator-page-size.ng-star-inserted[_ngcontent-%COMP%] > mat-form-field[_ngcontent-%COMP%] > div[_ngcontent-%COMP%] > div.mat-form-field-flex[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   mat-select[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:var(--colorDatePicker)!important}.mat-datepicker-content[_ngcontent-%COMP%], .mat-select-panel-wrap[_ngcontent-%COMP%]{box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f;display:flex;border-radius:2px;background-color:var(--backgroundDatePicker);color:var(--colorDatePicker)}.mat-calendar[_ngcontent-%COMP%], .mat-calendar-content[_ngcontent-%COMP%]{height:-moz-fit-content!important;height:fit-content!important}\"]\n    });\n  }\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}